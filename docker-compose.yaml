version: "3.9"

services:
  jupyter:
    build:
      context: "."
      target: "jupyter"
      args:
        USER_ID: "${USER_ID:-1000}"
        GROUP_ID: "${GROUP_ID:-1000}"
    ports:
      - "8888:8888"
    volumes:
      - "./notebooks:/usr/src/notebooks"
    env_file: ".env"

  dev:
    build:
      context: "."
      target: "dev"
    volumes:
      - ".:/usr/src/scripts"
    env_file: ".env"

  prod:
    build:
      context: "."
      target: "prod"
    volumes:
      - ".:/usr/src/scripts"
    env_file: ".env"
    volumes:
      - ./metadata:/usr/src//metadata

  minio:
    restart: always
    image: minio/minio:RELEASE.2022-07-04T21-02-54Z
    container_name: mlflow_s3
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ':9001' --address ':9000'
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data

  mc:
    image: minio/mc:RELEASE.2022-06-26T18-51-48Z
    depends_on:
      - minio
    container_name: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "
      /tmp/mlflow/wait-for-it.sh minio:9000;
      /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb minio/mlflow;
      mc mb minio/data;
      mc cp data/sample_parquet.csv minio/data;
      exit 0;
      "
    volumes:
      - ./wait-for-it.sh:/tmp/wait-for-it.sh

  db:
    restart: always
    image: mysql:8.0.29
    container_name: mlflow_db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql

  web:
    restart: always
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0

volumes:
  dbdata:
  minio_data:
  mlflow_recipes_data: